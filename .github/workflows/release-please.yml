on:
  push:
    branches:
      - releasesStuff
name: release-please-pr
jobs:
  release-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          release-type: node
          package-name: "@appfolio/react-gears"
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false},{"type":"refactor","section":"Miscellaneous","hidden":false}]'
          command: release-pr
          default-branch: releasesStuff
      - uses: actions/github-script@v5
        if: ${{ steps.release-please.outputs.pr }}
        id: extract-branch
        env:
          PR_NUM: ${{ steps.release-please.outputs.pr }}
        with:
          result-encoding: string
          script: return JSON.parse(process.env.PR_NUM).headBranchName
      - uses: actions/checkout@v2
        if: ${{ steps.release-please.outputs.pr }}
        with:
          ref: ${{ steps.extract-branch.outputs.result }}
      - run: npm ci
        if: ${{ steps.release-please.outputs.pr }}
      - run: npm run docs
        if: ${{ steps.release-please.outputs.pr }}
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ steps.release-please.outputs.pr }}
        with:
          commit_message: "docs: update documentation for the latest release"

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: "@appfolio/react-gears"
          command: github-release
      - uses: actions/checkout@v2
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com/'
        if: ${{ steps.release.outputs.release_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}
      - run: npm run dist
        if: ${{ steps.release.outputs.release_created }}
      # - run: npm run publish:github
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   if: ${{ steps.release.outputs.release_created }}
      # - uses: actions/setup-node@v2
      #   with:
      #     registry-url: 'https://registry.npmjs.org'
      #   if: ${{ steps.release.outputs.release_created }}
      # - run: npm run publish:npm
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   if: ${{ steps.release.outputs.release_created }}
