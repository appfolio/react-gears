"use strict";(self.webpackChunk_appfolio_react_gears=self.webpackChunk_appfolio_react_gears||[]).push([[9711],{"./src/components/BlockPanel/BlockPanel.stories.js":function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.StickyBlockPanel=exports.OnToggle=exports.LiveExample=exports.InitiallyClosed=exports.DropdownForControls=exports.ComponentsForTitleAndControls=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/components/Button/Button.tsx")),_ButtonGroup=_interopRequireDefault(__webpack_require__("./src/components/Button/ButtonGroup.tsx")),_DropdownItem=_interopRequireDefault(__webpack_require__("./src/components/Dropdown/DropdownItem.tsx")),_DropdownMenu=_interopRequireDefault(__webpack_require__("./src/components/Dropdown/DropdownMenu.tsx")),_DropdownToggle=_interopRequireDefault(__webpack_require__("./src/components/Dropdown/DropdownToggle.tsx")),_UncontrolledDropdown=_interopRequireDefault(__webpack_require__("./src/components/Dropdown/UncontrolledDropdown.js")),_HelpBubble=_interopRequireDefault(__webpack_require__("./src/components/HelpBubble/HelpBubble.tsx")),_Icon=_interopRequireDefault(__webpack_require__("./src/components/Icon/Icon.tsx")),_Input=_interopRequireDefault(__webpack_require__("./src/components/Input/Input.tsx")),_InputGroup=_interopRequireDefault(__webpack_require__("./src/components/InputGroup/InputGroup.tsx")),_InputGroupText=_interopRequireDefault(__webpack_require__("./src/components/InputGroup/InputGroupText.tsx")),_BlockPanel=_interopRequireDefault(__webpack_require__("./src/components/BlockPanel/BlockPanel.tsx"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}exports.default={title:"BlockPanel",component:_BlockPanel.default,parameters:{sourceLink:"BlockPanel/BlockPanel.tsx"}};var LiveExample=args=>_react.default.createElement(_BlockPanel.default,args,args.title?_react.default.createElement("div",null,"The header is shown when a ",_react.default.createElement("em",null,"title")," prop is provided"):_react.default.createElement("div",null,"The header is removed when the ",_react.default.createElement("em",null,"title")," prop is ",_react.default.createElement("em",null,"undefined")));exports.LiveExample=LiveExample,LiveExample.displayName="LiveExample",LiveExample.args={title:"Some simple content would go here",onEdit:(0,_addonActions.action)("onEdit"),color:"",expandable:!0,hideOnToggle:!1,open:!0},LiveExample.argTypes={color:{options:["","primary","secondary","info","success","warning","danger","light","dark"],control:{type:"select"}}};var InitiallyClosed=args=>_react.default.createElement(_BlockPanel.default,_extends({open:!1},args),"Now you don't.");exports.InitiallyClosed=InitiallyClosed,InitiallyClosed.displayName="InitiallyClosed",InitiallyClosed.args={title:"Some simple content would go here",onEdit:(0,_addonActions.action)("onEdit"),expandable:!0};var OnToggle=args=>_react.default.createElement(_BlockPanel.default,args,"Now you don't.");exports.OnToggle=OnToggle,OnToggle.displayName="OnToggle",OnToggle.args={title:"Click me you fool",onToggle:(0,_addonActions.action)("onToggle"),expandable:!0};var ComponentsForTitleAndControls=_ref=>{var title=_ref.title;return _react.default.createElement(_BlockPanel.default,{expandable:!0,title:_react.default.createElement("span",{className:"text-uppercase"},title," ",_react.default.createElement(_HelpBubble.default,{className:"text-primary",title:"What does this mean?"},"It means nothing.")),controls:[_react.default.createElement(_InputGroup.default,null,_react.default.createElement(_Input.default,{placeholder:"Search"}),_react.default.createElement(_InputGroupText.default,{className:"p-0 px-2"},_react.default.createElement(_Icon.default,{name:"search"}))),_react.default.createElement(_ButtonGroup.default,{className:"ms-1"},_react.default.createElement(_Button.default,{active:!0},_react.default.createElement(_Icon.default,{name:"list"})),_react.default.createElement(_Button.default,null,_react.default.createElement(_Icon.default,{name:"table-list"})))]},"Hello")};exports.ComponentsForTitleAndControls=ComponentsForTitleAndControls,ComponentsForTitleAndControls.displayName="ComponentsForTitleAndControls",ComponentsForTitleAndControls.args={title:"Invoices"};var DropdownForControls=_ref2=>{var title=_ref2.title;return _react.default.createElement(_BlockPanel.default,{expandable:!0,title:_react.default.createElement("span",{className:"text-uppercase"},title),controls:[_react.default.createElement(_UncontrolledDropdown.default,null,_react.default.createElement(_DropdownToggle.default,{id:"toggle",outline:!1,color:"link",className:"py-0 px-2",role:"button",title:"More options"},_react.default.createElement(_Icon.default,{name:"ellipsis",size:"lg"})),_react.default.createElement(_DropdownMenu.default,{right:!0},_react.default.createElement(_DropdownItem.default,null,"Eenie"),_react.default.createElement(_DropdownItem.default,null,"Meenie"),_react.default.createElement(_DropdownItem.default,null,"Min"),_react.default.createElement(_DropdownItem.default,null,"Delta")))]},"The symbolic resource $all, located at the service root, identifies the collection of all entities in a service, i.e. the union of all entity sets plus all singletons. This symbolic resource is of type Collection(Edm.EntityType) and allows the $search system query option plus all other query options applicable to collections of entities. The $all resource can be appended with a path segment containing the qualified name of an entity type in order to restrict the collections to entities of that type. Query options such as $select, $filter, $expand and $orderby can be applied to this restricted set according to the specified type. Example 37: all entities in a service that somehow match red")};exports.DropdownForControls=DropdownForControls,DropdownForControls.displayName="DropdownForControls",DropdownForControls.args={title:"Invoices"};var StickyBlockPanel=_ref3=>{var title=_ref3.title;return _react.default.createElement(_BlockPanel.default,{expandable:!0,stickyId:"rememberMe",title:title},"I feel sticky, oh so sticky, I feel sticky, and witty, and wise.")};exports.StickyBlockPanel=StickyBlockPanel,StickyBlockPanel.displayName="StickyBlockPanel",StickyBlockPanel.args={title:"I remember open/close"},module.exports.__namedExportsOrder=["StickyBlockPanel","OnToggle","LiveExample","InitiallyClosed","DropdownForControls","ComponentsForTitleAndControls"]}}]);