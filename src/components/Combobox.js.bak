import React, { useState, useRef } from 'react';
import PropTypes from 'prop-types';
import Button from './Button';
import Dropdown from './Dropdown';
import DropdownItem from './DropdownItem';
import DropdownMenu from './DropdownMenu';
import DropdownToggle from './DropdownToggle';
import Icon from './Icon';
import Input from './Input';
import InputGroup from './InputGroup';
import InputGroupAddon from './InputGroupAddon';

const Combobox = ({ className, direction, disabled, dropdownProps, filter, onChange, options, placeholder, value, ...props }) => {
  const [open, setOpen] = useState(false);
  const dropdown = useRef(null);
  const input = useRef(null);
  const visibleOptions = options.filter(option => filter(option, value));

  return (
    <Dropdown
      direction={direction}
      isOpen={!disabled && open}
      toggle={() => setOpen(!open)}
    >
      <DropdownToggle tag="div" disabled={false}>
        <InputGroup className={className}>
          <Input
            disabled={disabled}
            ref={input}
            placeholder={placeholder}
            onChange={e => onChange(e.target.value)}
            // onBlur={() => setOpen(false)}
            // onClick={() => setOpen(true)}
            // onFocus={() => setOpen(true)}
            onKeyDown={(e) => {
              if (e.key === 'ArrowDown') {
                console.log(dropdown.current)
                dropdown.current.focus();
                // const event = document.createEvent('Event');
                // event.initEvent('keydown', true, true);
                // event.keyCode = 76;
              }
            }}
            type="search"
            value={value}
            {...props}
          />
          <InputGroupAddon addonType="append" onClick={() => setOpen(!open)}>
            <Button
              className="px-2"
              disabled={disabled}
              active={open}
              type="button"
              tabIndex={-1}
            >
              <Icon name={open ? 'caret-up' : 'caret-down'} fixedWidth />
            </Button>
          </InputGroupAddon>
        </InputGroup>
      </DropdownToggle>
      <DropdownMenu
        className="p-0 w-100"
        ref={dropdown}
        style={{
          maxHeight: '12rem',
          overflowY: 'auto'
        }}
        {...dropdownProps}
      >
        {visibleOptions
          .map(option => (
            <DropdownItem active={value === option} onClick={() => onChange(option)}>
              {option}
            </DropdownItem>
          ))}
        {visibleOptions.length === 0 && (
          <DropdownItem disabled>
            No Results Found
          </DropdownItem>
        )}
      </DropdownMenu>
    </Dropdown>
  );
};

Combobox.propTypes = {
  className: PropTypes.string,
  direction: PropTypes.string,
  disabled: PropTypes.bool,
  dropdownProps: PropTypes.object,
  filter: PropTypes.func,
  noResultsLabel: PropTypes.string,
  onChange: PropTypes.func,
  options: PropTypes.oneOf([PropTypes.array, PropTypes.object]),
  placeholder: PropTypes.string,
  value: PropTypes.any
};

Combobox.defaultProps = {
  filter: (option, value) => value ? option.toLowerCase().match(value.toLowerCase()) : true,
  noResultsLabel: 'No Results Found'
};

export default Combobox;
